{
  "path": "/appid-<appId>/<tenantId>/recipe/totp/device/verify",
  "method": "post",
  "description": "Mark a TOTP device as verified if the given TOTP code is valid for that device.\n",
  "parameters": {
    "rid": {
      "name": "rid",
      "in": "header",
      "example": "totp",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "Authorization": {
      "name": "Authorization",
      "in": "header",
      "example": "ajs30Nlbs0DjvsdFIne934n8NVee5n",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "cdi-version": {
      "name": "cdi-version",
      "in": "header",
      "description": "X.Y of the X.Y.Z CDI version.",
      "example": "5.1",
      "schema": {
        "type": "string"
      }
    }
  },
  "body": {
    "schema": {
      "application/json": {
        "type": "object",
        "required": [
          "userId",
          "deviceName",
          "totp"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "example": "fa7a0841-b533-4478-95533-0fde890c3483"
          },
          "deviceName": {
            "type": "string",
            "example": "My Authy App"
          },
          "totp": {
            "type": "string",
            "example": "123456"
          }
        }
      }
    }
  },
  "responses": {
    "200": {
      "description": "Indicates success with the status property",
      "content": {
        "application/json": {
          "schema": [
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "OK"
                  ]
                },
                "wasAlreadyVerified": {
                  "type": "boolean",
                  "example": false
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "UNKNOWN_DEVICE_ERROR"
                  ]
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "INVALID_TOTP_ERROR"
                  ]
                },
                "currentNumberOfFailedAttempts": {
                  "type": "number",
                  "example": 2
                },
                "maxNumberOfFailedAttempts": {
                  "type": "number",
                  "example": 5
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "LIMIT_REACHED_ERROR"
                  ]
                },
                "retryAfterMs": {
                  "type": "number",
                  "example": 90000
                },
                "currentNumberOfFailedAttempts": {
                  "type": "number",
                  "example": 2
                },
                "maxNumberOfFailedAttempts": {
                  "type": "number",
                  "example": 5
                }
              }
            }
          ]
        }
      }
    },
    "400": {
      "description": "error code 400",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "401": {
      "description": "error code 401",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Invalid API key"
            ]
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}