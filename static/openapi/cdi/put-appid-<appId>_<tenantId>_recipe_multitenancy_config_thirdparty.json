{
  "path": "/appid-<appId>/<tenantId>/recipe/multitenancy/config/thirdparty",
  "method": "put",
  "description": "Creates or updates ThirdParty Provider Config for a tenant.\n\nIf `skipValidation` is set to true, the config will be saved without any validation.\n\nIf the config already exists for the given `tenantId` and `thirdPartyId`, the config in the core will be completely replaced with the config provided in the request body.\n\n**Validations done by the core:**\n\n`thirdPartyId` and `name` are required\n\nCommon to all providers:\n  - `clients` list:\n    - can be undefined or empty\n    - if contains 1 element, clientType can be empty or undefined\n    - if contains more than 1 element, clientType must be defined and unique\n  - for each element in `clients`:\n    - `clientId` must not be empty\n\nBuilt-in provider's specific validation is invoked if the `thirdPartyId` starts with the provider's id\n\nApple (id: apple):\n  - `clients`\n    - if it contains elements, each of them are validated as follows:\n      - `clientSecret` must be empty or undefined\n      - `additionalConfig` should contain the following keys:\n        - `keyId` must be a non empty string\n        - `teamId` must be a non empty string\n        - `privateKey` must be a non empty string\n\nGoogle Workspaces (id: google-workspaces):\n  - `clients`\n    - if it contains elements, each of them are validated as follows:\n      - `additionalConfig` may contain the key `hd`\n        - `hd` is optional\n        - if specified, it must be either `\"*\"`, or a valid domain\n\nBoxy SAML (id: boxy-saml):\n  - `clients`\n    - `additionalConfig` in the each element must contain `boxyURL` and must be non-empty string\n",
  "parameters": {
    "rid": {
      "name": "rid",
      "in": "header",
      "example": "multitenancy",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "Authorization": {
      "name": "Authorization",
      "in": "header",
      "example": "ajs30Nlbs0DjvsdFIne934n8NVee5n",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "cdi-version": {
      "name": "cdi-version",
      "in": "header",
      "description": "X.Y of the X.Y.Z CDI version.",
      "example": "5.1",
      "schema": {
        "type": "string"
      }
    }
  },
  "body": {
    "schema": {
      "application/json": {
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "required": [
              "thirdPartyId"
            ],
            "properties": {
              "thirdPartyId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "clients": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "clientType": {
                      "type": "string"
                    },
                    "clientId": {
                      "type": "string"
                    },
                    "clientSecret": {
                      "type": "string"
                    },
                    "scope": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "forcePKCE": {
                      "type": "boolean"
                    },
                    "additionalConfig": {
                      "type": "object"
                    }
                  }
                }
              },
              "authorizationEndpoint": {
                "type": "string"
              },
              "authorizationEndpointQueryParams": {
                "type": "object"
              },
              "tokenEndpoint": {
                "type": "string"
              },
              "tokenEndpointBodyParams": {
                "type": "object"
              },
              "userInfoEndpoint": {
                "type": "string"
              },
              "userInfoEndpointQueryParams": {
                "type": "object"
              },
              "userInfoEndpointHeaders": {
                "type": "object"
              },
              "jwksURI": {
                "type": "string"
              },
              "oidcDiscoveryEndpoint": {
                "type": "string"
              },
              "requireEmail": {
                "type": "boolean",
                "default": true
              },
              "userInfoMap": {
                "type": "object",
                "properties": {
                  "fromIdTokenPayload": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "emailVerified": {
                        "type": "string"
                      }
                    }
                  },
                  "fromUserInfoAPI": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "emailVerified": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "skipValidation": {
            "type": "boolean",
            "example": false
          }
        }
      }
    }
  },
  "responses": {
    "200": {
      "description": "Create or Update result",
      "content": {
        "application/json": {
          "schema": [
            {
              "type": "object",
              "required": [
                "status",
                "createdNew"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "OK"
                  ]
                },
                "createdNew": {
                  "type": "boolean"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "status",
                "reason"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "CONFIG_VALIDATION_ERROR"
                  ]
                },
                "reason": {
                  "type": "string"
                }
              }
            }
          ]
        }
      }
    },
    "400": {
      "description": "error code 400",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "401": {
      "description": "error code 401",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Invalid API key"
            ]
          }
        }
      }
    },
    "402": {
      "description": "error code 402",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "License Error"
            ]
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}