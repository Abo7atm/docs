{
  "path": "/appid-<appId>/recipe/user/metadata",
  "method": "put",
  "description": "Updates the metadata object stored about the user by doing a shallow merge of the stored and the update JSONs\nand removing properties set to null on the root level of the update object. The merged object is then reserialized and stored.\n\ne.g.:\n  - stored: `{ \"preferences\": { \"theme\":\"dark\" }, \"notifications\": { \"email\": true }, \"todos\": [\"example\"] }`\n\n  - update: `{ \"notifications\": { \"sms\": true }, \"todos\": null }`\n\n  - result: `{ \"preferences\": { \"theme\":\"dark\" }, \"notifications\": { \"sms\": true } }`\n",
  "parameters": {
    "rid": {
      "name": "rid",
      "in": "header",
      "example": "usermetadata",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "Authorization": {
      "name": "Authorization",
      "in": "header",
      "example": "ajs30Nlbs0DjvsdFIne934n8NVee5n",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "cdi-version": {
      "name": "cdi-version",
      "in": "header",
      "description": "X.Y of the X.Y.Z CDI version.",
      "example": "5.1",
      "schema": {
        "type": "string"
      }
    }
  },
  "body": {
    "schema": {
      "application/json": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "fa7a0841-b533-4478-95533-0fde890c3483"
          },
          "metadataUpdate": {
            "type": "dictionary",
            "description": "should be a JSON object (not a JSON literal nor an array)",
            "example": {
              "notifications": {
                "sms": true
              },
              "todos": null
            }
          }
        }
      }
    }
  },
  "responses": {
    "200": {
      "description": "The operation was successful",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "OK"
                ]
              },
              "metadata": {
                "type": "dictionary",
                "description": "should be a JSON object (not a JSON literal nor an array)",
                "example": {
                  "preferences": {
                    "theme": "dark"
                  },
                  "notifications": {
                    "email": true
                  },
                  "todos": [
                    "example"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "400": {
      "description": "error code 400",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "401": {
      "description": "error code 401",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Invalid API key"
            ]
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}