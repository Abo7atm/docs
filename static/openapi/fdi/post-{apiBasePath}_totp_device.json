{
  "path": "/{apiBasePath}/totp/device",
  "method": "post",
  "description": "Creates an unverified totp device\n",
  "parameters": {
    "apiBasePath": {
      "name": "apiBasePath",
      "in": "path",
      "description": "Its value depends on the apiBasePath set by the user",
      "required": true,
      "schema": {
        "type": "string",
        "example": "auth"
      }
    },
    "rid": {
      "name": "rid",
      "in": "header",
      "example": "totp",
      "schema": {
        "type": "string"
      }
    },
    "anti-csrf": {
      "name": "anti-csrf",
      "in": "header",
      "description": "This will only be here if enabled by the user.",
      "schema": {
        "type": "string",
        "example": "ZTRiOTBjNz...jI5MTZlODkxw"
      }
    }
  },
  "body": {
    "schema": {
      "application/json": {
        "type": "object",
        "properties": {
          "deviceName": {
            "type": "string",
            "example": "asdf123"
          }
        }
      }
    }
  },
  "security": [
    {
      "AccessTokenBearer": []
    },
    {
      "AccessTokenCookie": []
    }
  ],
  "responses": {
    "200": {
      "description": "Information about the created (unverified) device. Based on the this,\nthe user can add the device to their TOTP app and verify it.\n",
      "content": {
        "application/json": {
          "schema": [
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "OK"
                  ]
                },
                "deviceName": {
                  "type": "string",
                  "example": "asfd123"
                },
                "qrCodeString": {
                  "type": "string",
                  "example": "otpauth://totp/Supertokens:alice@google.com?secret=JBSWY3DPEHPK3PXP&issuer=Supertokens"
                },
                "secret": {
                  "type": "string",
                  "example": "JBSWY3DPEHPK3PXP"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "DEVICE_ALREADY_EXISTS_ERROR"
                  ]
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "GENERAL_ERROR"
                  ]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          ]
        }
      }
    },
    "403": {
      "description": "A claim validation error happened during factor setup",
      "content": {
        "application/json": {
          "schema": [
            {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "invalid claim"
                },
                "claimValidationErrors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "st-ev"
                      },
                      "reason": {
                        "type": "dictionary",
                        "example": {
                          "message": "wrong value",
                          "expectedValue": true,
                          "actualValue": false
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "invalid claim"
                },
                "claimValidationErrors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "st-mfa"
                      },
                      "reason": {
                        "type": "string",
                        "example": "Completed factors in the session does not satisfy the MFA requirements for auth"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}