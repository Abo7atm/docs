{
  "path": "/{apiBasePath}/oauth/end_session",
  "method": "get",
  "description": "Redirects the user to a page where they can log out and revoke the oauth tokens\n",
  "parameters": {
    "apiBasePath": {
      "name": "apiBasePath",
      "in": "path",
      "description": "Its value depends on the apiBasePath set by the user",
      "required": true,
      "schema": {
        "type": "string",
        "example": "auth"
      }
    },
    "id_token_hint": {
      "in": "query",
      "name": "id_token_hint",
      "schema": {
        "type": "string"
      }
    },
    "client_id": {
      "in": "query",
      "name": "client_id",
      "schema": {
        "type": "string",
        "example": "st-cl-example-client"
      }
    },
    "post_logout_redirect_uri": {
      "in": "query",
      "name": "post_logout_redirect_uri",
      "schema": {
        "type": "string",
        "example": "https://client.example.com/logoutCallback"
      }
    }
  },
  "body": {},
  "responses": {
    "200": {
      "description": "A general error response",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "GENERAL_ERROR"
                ]
              },
              "message": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "302": {
      "description": "Redirects the user to the logout page or back to the client app",
      "headers": {
        "Location": {
          "schema": {
            "type": "string",
            "example": "https://auth.example.com/auth/oauth/logout?logoutChallenge=1234567890"
          }
        }
      }
    },
    "400": {
      "description": "error code 400 for OAuth2 errors",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "type": "string",
                "example": "invalid_request"
              },
              "error_description": {
                "type": "string",
                "example": "Unsupported grant type: password"
              }
            }
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}