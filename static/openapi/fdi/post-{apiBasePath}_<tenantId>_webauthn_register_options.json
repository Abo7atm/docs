{
  "path": "/{apiBasePath}/<tenantId>/webauthn/register/options",
  "method": "post",
  "description": "Get WebAuthn registration options for a user\n",
  "parameters": {
    "apiBasePath": {
      "name": "apiBasePath",
      "in": "path",
      "description": "Its value depends on the apiBasePath set by the user",
      "required": true,
      "schema": {
        "type": "string",
        "example": "auth"
      }
    },
    "rid": {
      "name": "rid",
      "in": "header",
      "example": "webauthn",
      "schema": {
        "type": "string"
      }
    }
  },
  "body": {
    "schema": {
      "application/json": [
        {
          "type": "object",
          "required": [
            "email"
          ],
          "properties": {
            "email": {
              "type": "string",
              "example": "johndoe@gmail.com"
            },
            "displayName": {
              "type": "string",
              "example": "John Doe"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "recoverAccountToken"
          ],
          "properties": {
            "recoverAccountToken": {
              "type": "string",
              "example": "abc123..."
            }
          }
        }
      ]
    }
  },
  "responses": {
    "200": {
      "description": "WebAuthn registration options",
      "content": {
        "application/json": {
          "schema": [
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "OK"
                  ]
                },
                "webauthnGeneratedOptionsId": {
                  "type": "string",
                  "example": "opt_123..."
                },
                "createdAt": {
                  "type": "string",
                  "example": "2024-03-20T10:00:00Z"
                },
                "expiresAt": {
                  "type": "string",
                  "example": "2024-03-20T10:05:00Z"
                },
                "rp": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "example.com"
                    },
                    "name": {
                      "type": "string",
                      "example": "Example Site"
                    }
                  }
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "user_123..."
                    },
                    "name": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "displayName": {
                      "type": "string",
                      "example": "John Doe"
                    }
                  }
                },
                "challenge": {
                  "type": "string",
                  "example": "base64challenge..."
                },
                "timeout": {
                  "type": "number",
                  "example": 300000
                },
                "excludeCredentials": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "public-key"
                        ]
                      },
                      "transports": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "ble",
                            "hybrid",
                            "internal",
                            "nfc",
                            "usb"
                          ]
                        }
                      }
                    }
                  }
                },
                "attestation": {
                  "type": "string",
                  "enum": [
                    "none",
                    "indirect",
                    "direct",
                    "enterprise"
                  ]
                },
                "pubKeyCredParams": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "alg": {
                        "type": "number",
                        "example": -7
                      },
                      "type": {
                        "type": "string",
                        "example": "public-key"
                      }
                    }
                  }
                },
                "authenticatorSelection": {
                  "type": "object",
                  "properties": {
                    "requireResidentKey": {
                      "type": "boolean"
                    },
                    "residentKey": {
                      "type": "string",
                      "enum": [
                        "required",
                        "preferred",
                        "discouraged"
                      ]
                    },
                    "userVerification": {
                      "type": "string",
                      "enum": [
                        "required",
                        "preferred",
                        "discouraged"
                      ]
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "GENERAL_ERROR"
                  ]
                },
                "message": {
                  "type": "string"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "INVALID_OPTIONS_ERROR",
                    "RECOVER_ACCOUNT_TOKEN_INVALID_ERROR"
                  ]
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "INVALID_EMAIL_ERROR"
                  ]
                },
                "err": {
                  "type": "string",
                  "example": "Invalid email"
                }
              }
            }
          ]
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}