{
  "path": "/{apiBasePath}/oauth/revoke",
  "method": "post",
  "description": "Revokes an access/refresh token - the client id and secret can also be provided in an authorization header using the Basic scheme\n",
  "parameters": {
    "apiBasePath": {
      "name": "apiBasePath",
      "in": "path",
      "description": "Its value depends on the apiBasePath set by the user",
      "required": true,
      "schema": {
        "type": "string",
        "example": "auth"
      }
    }
  },
  "body": {
    "schema": {
      "application/json": {
        "type": "object",
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "string"
          },
          "client_id": {
            "type": "string",
            "example": "st-cl-test-client"
          },
          "client_secret": {
            "type": "string",
            "example": "superSecret"
          }
        }
      },
      "x-www-form-urlencoded": {
        "type": "object",
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "string"
          },
          "client_id": {
            "type": "string",
            "example": "st-cl-test-client"
          },
          "client_secret": {
            "type": "string",
            "example": "superSecret"
          }
        }
      }
    }
  },
  "responses": {
    "200": {
      "description": "Revoked the access/refresh token",
      "content": {
        "application/json": {
          "schema": [
            {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "OK"
                  ]
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "GENERAL_ERROR"
                  ]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          ]
        }
      }
    },
    "400": {
      "description": "error code 400 for OAuth2 errors",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "error": {
                "type": "string",
                "example": "invalid_request"
              },
              "error_description": {
                "type": "string",
                "example": "Unsupported grant type: password"
              }
            }
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}