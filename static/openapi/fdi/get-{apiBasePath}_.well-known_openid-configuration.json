{
  "path": "/{apiBasePath}/.well-known/openid-configuration",
  "method": "get",
  "description": "Get OpenID discovery configuration\n",
  "parameters": {
    "apiBasePath": {
      "name": "apiBasePath",
      "in": "path",
      "description": "Its value depends on the apiBasePath set by the user",
      "required": true,
      "schema": {
        "type": "string",
        "example": "auth"
      }
    }
  },
  "body": {},
  "responses": {
    "200": {
      "description": "Retrieve OpenID configuration",
      "content": {
        "application/json": {
          "schema": [
            {
              "type": "object",
              "properties": {
                "issuer": {
                  "type": "string",
                  "description": "URL using the https scheme with no query or fragment component that the OP asserts as its Issuer Identifier (https://openid.net/specs/openid-connect-discovery-1_0.html section 3)",
                  "example": "https://api.example.com/auth"
                },
                "jwks_uri": {
                  "type": "string",
                  "description": "URL for fetching a list JsonWebKey, used for JWT signature verification. Refer to /jwt/jwks.json API in the JWT recipe for JWK details",
                  "example": "https://api.example.com/auth/jwt/jwks.json"
                },
                "authorization_endpoint": {
                  "type": "string",
                  "description": "URL of the authorization endpoint",
                  "example": "https://api.example.com/auth/oauth/authorize"
                },
                "token_endpoint": {
                  "type": "string",
                  "description": "URL of the token endpoint",
                  "example": "https://api.example.com/auth/oauth/token"
                },
                "userinfo_endpoint": {
                  "type": "string",
                  "description": "URL of the userinfo endpoint",
                  "example": "https://api.example.com/auth/oauth/userinfo"
                },
                "revocation_endpoint": {
                  "type": "string",
                  "description": "URL of the token revocation endpoint",
                  "example": "https://api.example.com/auth/oauth/revoke"
                },
                "token_introspection_endpoint": {
                  "type": "string",
                  "description": "URL of the token introspection endpoint",
                  "example": "https://api.example.com/auth/oauth/introspect"
                },
                "end_session_endpoint": {
                  "type": "string",
                  "description": "URL of the end session endpoint",
                  "example": "https://api.example.com/auth/oauth/end_session"
                },
                "subject_types_supported": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "public"
                    ]
                  }
                },
                "id_token_signing_alg_values_supported": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "RS256"
                    ]
                  }
                },
                "response_types_supported": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "code",
                      "id_token",
                      "id_token token"
                    ]
                  }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "GENERAL_ERROR"
                  ]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          ]
        }
      }
    },
    "400": {
      "description": "error code 400",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Bad request"
            ]
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}