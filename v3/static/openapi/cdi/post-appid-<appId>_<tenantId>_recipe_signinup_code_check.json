{
  "path": "/appid-<appId>/<tenantId>/recipe/signinup/code/check",
  "method": "post",
  "description": "Tries to check if the passed userInputCode+deviceId combo or the linkCode is valid\n",
  "parameters": {
    "rid": {
      "name": "rid",
      "in": "header",
      "example": "passwordless",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "Authorization": {
      "name": "Authorization",
      "in": "header",
      "example": "ajs30Nlbs0DjvsdFIne934n8NVee5n",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "cdi-version": {
      "name": "cdi-version",
      "in": "header",
      "description": "X.Y of the X.Y.Z CDI version.",
      "example": "5.1",
      "schema": {
        "type": "string"
      }
    }
  },
  "body": {
    "schema": {
      "application/json": [
        {
          "type": "object",
          "required": [
            "preAuthSessionId",
            "linkCode"
          ],
          "properties": {
            "preAuthSessionId": {
              "type": "string",
              "description": "A random identifier that can be used to identify the login attempt/device.",
              "example": "kFmkPQEAJtACiT2w/K8fndEuNm+XozJXSZSlWEr+iGs="
            },
            "linkCode": {
              "type": "string",
              "description": "URL-safe string that can be used to authenticate the user, without the deviceId",
              "example": "b10lbT_SnDC4flA6Fn7pE5TtG5k5NfigLef4QMBeGA8"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "preAuthSessionId",
            "deviceId",
            "userInputCode"
          ],
          "properties": {
            "preAuthSessionId": {
              "type": "string",
              "description": "A random identifier that can be used to identify the login attempt/device.",
              "example": "kFmkPQEAJtACiT2w/K8fndEuNm+XozJXSZSlWEr+iGs="
            },
            "deviceId": {
              "type": "string",
              "description": "A random identifier that should be stored on the device that started the sign in process.",
              "example": "TU/52WOcktSv99zqaAZuWJG9BSoS0aRLfCbep8rFEwk="
            },
            "userInputCode": {
              "type": "string",
              "description": "This can be used to authenticate the user when paired with the deviceId",
              "example": 456123
            }
          }
        }
      ]
    }
  },
  "responses": {
    "200": {
      "description": "Indicates success with the status property",
      "content": {
        "application/json": {
          "schema": [
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "OK"
                  ]
                },
                "consumedDevice": {
                  "type": "object",
                  "required": [
                    "preAuthSessionId",
                    "failedCodeInputAttemptCount"
                  ],
                  "properties": {
                    "preAuthSessionId": {
                      "type": "string",
                      "description": "A random identifier that can be used to identify the login attempt/device.",
                      "example": "kFmkPQEAJtACiT2w/K8fndEuNm+XozJXSZSlWEr+iGs="
                    },
                    "failedCodeInputAttemptCount": {
                      "type": "number",
                      "example": 2
                    },
                    "email": {
                      "type": "string",
                      "example": "johndoe@gmail.com"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "example": "+14155552671"
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "INCORRECT_USER_INPUT_CODE_ERROR",
                    "EXPIRED_USER_INPUT_CODE_ERROR"
                  ]
                },
                "failedCodeInputAttemptCount": {
                  "type": "number",
                  "example": 2
                },
                "maximumCodeInputAttempts": {
                  "type": "number",
                  "example": 5
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "RESTART_FLOW_ERROR"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "400": {
      "description": "error code 400",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "401": {
      "description": "error code 401",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Invalid API key"
            ]
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}