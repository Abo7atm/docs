{
  "path": "/appid-<appId>/<tenantId>/recipe/multitenancy/tenant/user",
  "method": "post",
  "description": "Add user's association with the tenant.\n\nUser will be added to the tenant based on the url prefix of the request.\n\nNote: To associate a user to a tenant, the tenant must be in the same database\nand user must already exist in the app\n",
  "headers": {
    "rid": {
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "Authorization": {
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "cdi-version": {
      "description": "X.Y of the X.Y.Z CDI version.",
      "schema": {
        "type": "string"
      }
    }
  },
  "body": {
    "schema": {
      "application/json": {
        "type": "object",
        "required": [
          "recipeUserId"
        ],
        "properties": {
          "recipeUserId": {
            "type": "string",
            "example": "fa7a0841-b533-4478-95533-0fde890c3483"
          }
        }
      }
    }
  },
  "responses": {
    "200": {
      "description": "Association result",
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "status",
                  "wasAlreadyAssociated"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "OK"
                    ]
                  },
                  "wasAlreadyAssociated": {
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "UNKNOWN_USER_ID_ERROR",
                      "EMAIL_ALREADY_EXISTS_ERROR",
                      "PHONE_NUMBER_ALREADY_EXISTS_ERROR",
                      "THIRD_PARTY_USER_ALREADY_EXISTS_ERROR"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "ASSOCIATION_NOT_ALLOWED_ERROR"
                    ]
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "400": {
      "description": "error code 400",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "401": {
      "description": "error code 401",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Invalid API key"
            ]
          }
        }
      }
    },
    "402": {
      "description": "error code 402",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "License Error"
            ]
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}