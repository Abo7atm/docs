{
  "path": "/appid-<appId>/recipe/dashboard/user",
  "method": "delete",
  "description": "Delete a dashboard user with their userId or email\n",
  "headers": {
    "rid": {
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "Authorization": {
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    "cdi-version": {
      "description": "X.Y of the X.Y.Z CDI version.",
      "schema": {
        "type": "string"
      }
    }
  },
  "parameters": {
    "email": {
      "in": "query",
      "name": "email",
      "schema": {
        "type": "string",
        "example": "test@example.com"
      },
      "required": false
    },
    "userId": {
      "in": "query",
      "name": "userId",
      "schema": {
        "type": "string",
        "example": "ue1231-f32f290f2-f23r23f-323f2"
      },
      "required": false
    }
  },
  "body": {},
  "responses": {
    "200": {
      "description": "Indicates success with the status property",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "OK"
                ]
              },
              "didUserExist": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "400": {
      "description": "error code 400",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "401": {
      "description": "error code 401",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Invalid API key"
            ]
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}