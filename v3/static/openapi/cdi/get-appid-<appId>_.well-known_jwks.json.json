{
  "path": "/appid-<appId>/.well-known/jwks.json",
  "method": "get",
  "description": "Retrieve JWKs for JWT verification, containing both static and dynamic keys.\n",
  "body": {},
  "responses": {
    "200": {
      "description": "Retrieve JWKs for JWT verification, containing both static and dynamic keys.",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "keys": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "A JWK that can be used to verify a JWT",
                  "properties": {
                    "alg": {
                      "type": "string",
                      "description": "The algorithm to use when creating the JWT.",
                      "enum": [
                        "RS256"
                      ]
                    },
                    "kty": {
                      "type": "string",
                      "example": "RSA"
                    },
                    "use": {
                      "type": "string",
                      "example": "sig"
                    },
                    "kid": {
                      "type": "string",
                      "description": "Unique identifier for the JWK"
                    },
                    "x5c": {
                      "type": "array",
                      "description": "X.509 Certificate Chain",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "400": {
      "description": "error code 400",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}