{
  "path": "/{apiBasePath}/<tenantId>/authorisationurl",
  "method": "get",
  "description": "Get the thirdparty provider's authorisation URL to which the user should be redirected to.\n",
  "headers": {
    "rid": {
      "schema": {
        "type": "string"
      }
    }
  },
  "parameters": {
    "apiBasePath": {
      "name": "apiBasePath",
      "in": "path",
      "description": "Its value depends on the apiBasePath set by the user",
      "required": true,
      "schema": {
        "type": "string",
        "example": "auth"
      }
    },
    "thirdPartyId": {
      "in": "query",
      "name": "thirdPartyId",
      "required": true,
      "schema": {
        "type": "string",
        "example": "google"
      }
    },
    "redirectURIOnProviderDashboard": {
      "in": "query",
      "name": "redirectURIOnProviderDashboard",
      "required": true,
      "schema": {
        "type": "string",
        "example": "https://yourdomain.com/callback"
      }
    },
    "clientType": {
      "in": "query",
      "name": "clientType",
      "required": false,
      "schema": {
        "type": "string",
        "example": "web"
      }
    }
  },
  "body": {},
  "responses": {
    "200": {
      "description": "Get the OAuth authorisation URL",
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "status",
                  "url"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "OK"
                    ]
                  },
                  "urlWithQueryParams": {
                    "type": "string",
                    "example": "https://providerdomain.com/authorize?client_id=..&scope=..&access_type=.."
                  },
                  "pkceCodeVerifier": {
                    "type": "string",
                    "example": "abcd1234"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "GENERAL_ERROR"
                    ]
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}