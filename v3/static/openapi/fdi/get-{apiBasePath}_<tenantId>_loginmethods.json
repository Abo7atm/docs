{
  "path": "/{apiBasePath}/<tenantId>/loginmethods",
  "method": "get",
  "description": "Get enabled login methods: Returns recipes with their enabled setting and recipe specific configuration.\n",
  "headers": {
    "rid": {
      "schema": {
        "type": "string"
      }
    }
  },
  "parameters": {
    "apiBasePath": {
      "name": "apiBasePath",
      "in": "path",
      "description": "Its value depends on the apiBasePath set by the user",
      "required": true,
      "schema": {
        "type": "string",
        "example": "auth"
      }
    },
    "clientType": {
      "in": "query",
      "name": "clientType",
      "required": false,
      "schema": {
        "type": "string",
        "example": "web"
      }
    }
  },
  "body": {},
  "responses": {
    "200": {
      "description": "Get enabled login methods",
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "status",
                  "recipes"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "OK"
                    ]
                  },
                  "recipes": {
                    "type": "object",
                    "required": [
                      "emailPassword",
                      "thirdParty",
                      "passwordless",
                      "firstFactors"
                    ],
                    "properties": {
                      "emailPassword": {
                        "type": "object",
                        "required": [
                          "enabled"
                        ],
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      },
                      "thirdParty": {
                        "type": "object",
                        "required": [
                          "enabled",
                          "providers"
                        ],
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "example": true
                          },
                          "providers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "google"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Google"
                                }
                              }
                            }
                          }
                        }
                      },
                      "passwordless": {
                        "type": "object",
                        "required": [
                          "enabled"
                        ],
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      },
                      "firstFactors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "GENERAL_ERROR"
                    ]
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}