{
  "path": "/{apiBasePath}/<tenantId>/signinup/code/consume",
  "method": "post",
  "description": "Finish sign in/up process with passwordless\n",
  "headers": {
    "rid": {
      "schema": {
        "type": "string"
      }
    }
  },
  "parameters": {
    "apiBasePath": {
      "name": "apiBasePath",
      "in": "path",
      "description": "Its value depends on the apiBasePath set by the user",
      "required": true,
      "schema": {
        "type": "string",
        "example": "auth"
      }
    }
  },
  "body": {
    "schema": {
      "application/json": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "preAuthSessionId",
              "linkCode"
            ],
            "properties": {
              "preAuthSessionId": {
                "type": "string",
                "description": "An identifier that used to identify the login attempt/device.",
                "example": "kFmkPQEAJtACiT2w/K8fndEuNm+XozJXSZSlWEr+iGs="
              },
              "linkCode": {
                "type": "string",
                "example": "b10lbT_SnDC4flA6Fn7pE5TtG5k5NfigLef4QMBeGA8"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "preAuthSessionId",
              "deviceId",
              "userInputCode"
            ],
            "properties": {
              "preAuthSessionId": {
                "type": "string",
                "description": "An identifier that used to identify the login attempt/device.",
                "example": "kFmkPQEAJtACiT2w/K8fndEuNm+XozJXSZSlWEr+iGs="
              },
              "deviceId": {
                "type": "string",
                "description": "This should be saved on the starting device to enable the manual code entry flow.",
                "example": "TU/52WOcktSv99zqaAZuWJG9BSoS0aRLfCbep8rFEwk="
              },
              "userInputCode": {
                "type": "string",
                "example": 432123
              }
            }
          }
        ]
      }
    }
  },
  "responses": {
    "200": {
      "description": "Signin/up a user",
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "OK"
                    ]
                  },
                  "createdNewRecipeUser": {
                    "type": "boolean",
                    "example": true
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "fa7a0841-b533-4478-95533-0fde890c3483"
                      },
                      "timeJoined": {
                        "type": "number",
                        "example": 1638433545183
                      },
                      "isPrimaryUser": {
                        "type": "boolean",
                        "example": true
                      },
                      "tenantIds": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "public"
                        }
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "johndoe@gmail.com"
                        }
                      },
                      "phoneNumbers": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": 36201234123
                        }
                      },
                      "thirdParty": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "google"
                            },
                            "userId": {
                              "type": "string",
                              "example": "rq238mrq2389rvq123213"
                            }
                          }
                        }
                      },
                      "loginMethods": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "recipeId": {
                              "type": "string",
                              "enum": [
                                "emailpassword",
                                "thirdparty",
                                "passwordless"
                              ]
                            },
                            "recipeUserId": {
                              "type": "string",
                              "example": "fa7a0841-b533-4478-95533-0fde890c3483"
                            },
                            "verified": {
                              "type": "boolean",
                              "example": true
                            },
                            "tenantIds": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "public"
                              }
                            },
                            "timeJoined": {
                              "type": "number",
                              "example": 1638433545183
                            },
                            "email": {
                              "type": "string",
                              "example": "johndoe@gmail.com"
                            },
                            "phoneNumber": {
                              "type": "string",
                              "example": 36201234123
                            },
                            "thirdParty": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "google"
                                },
                                "userId": {
                                  "type": "string",
                                  "example": "rq238mrq2389rvq123213"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "INCORRECT_USER_INPUT_CODE_ERROR",
                      "EXPIRED_USER_INPUT_CODE_ERROR"
                    ]
                  },
                  "failedCodeInputAttemptCount": {
                    "type": "number",
                    "example": 2
                  },
                  "maximumCodeInputAttempts": {
                    "type": "number",
                    "example": 5
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "RESTART_FLOW_ERROR"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "SIGN_IN_UP_NOT_ALLOWED"
                    ]
                  },
                  "reason": {
                    "type": "string",
                    "example": "Cannot sign in / up due to security reasons. Please contact support. (IS_SIGN_IN_ALLOWED_FALSE)"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "GENERAL_ERROR"
                    ]
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      },
      "headers": {
        "Set-Cookie": {
          "description": "In cookie-based sessions",
          "schema": {
            "type": "string",
            "example": "sAccessToken=eyJhb...%3D%3D; Path=/; Expires=Tue, 22 Jun 2021 07:43:07 GMT; HttpOnly; SameSite=Lax; sRefreshToken=K91cQ7ezMbu...cb61c3.V2; Path=/auth/session/refresh; Expires=Thu, 30 Sep 2021 06:43:07 GMT; HttpOnly; SameSite=Lax"
          }
        },
        "st-access-token": {
          "description": "In header-based sessions",
          "schema": {
            "type": "string",
            "example": "ZTRiOTBjNz...jI5MTZlODkxw"
          }
        },
        "st-refresh-token": {
          "description": "In header-based sessions",
          "schema": {
            "type": "string",
            "example": "ZTRiOTBjNz...jI5MTZlODkxw"
          }
        },
        "anti-csrf": {
          "description": "If enabled by the user",
          "schema": {
            "type": "string",
            "example": "ZTRiOTBjNz...jI5MTZlODkxw"
          }
        },
        "front-token": {
          "schema": {
            "type": "string",
            "example": "ZTRiOTBjNz...jI5MTZlODkxw"
          }
        },
        "Access-Control-Expose-Headers": {
          "schema": {
            "type": "string",
            "example": "anti-csrf, front-token, st-access-token, st-refresh-token"
          }
        }
      }
    },
    "403": {
      "description": "A claim validation error happened during factor setup",
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "invalid claim"
                  },
                  "claimValidationErrors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "st-ev"
                        },
                        "reason": {
                          "type": "object",
                          "example": {
                            "message": "wrong value",
                            "expectedValue": true,
                            "actualValue": false
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "invalid claim"
                  },
                  "claimValidationErrors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "st-mfa"
                        },
                        "reason": {
                          "type": "string",
                          "example": "Completed factors in the session does not satisfy the MFA requirements for auth"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}