{
  "path": "/{apiBasePath}/totp/device/verify",
  "method": "post",
  "description": "Checks that the TOTP sent in the body belongs to the totp device (specified by deviceName, belonging to the session user)\n",
  "headers": {
    "rid": {
      "schema": {
        "type": "string"
      }
    },
    "anti-csrf": {
      "description": "This will only be here if enabled by the user.",
      "schema": {
        "type": "string",
        "example": "ZTRiOTBjNz...jI5MTZlODkxw"
      }
    }
  },
  "parameters": {
    "apiBasePath": {
      "name": "apiBasePath",
      "in": "path",
      "description": "Its value depends on the apiBasePath set by the user",
      "required": true,
      "schema": {
        "type": "string",
        "example": "auth"
      }
    }
  },
  "body": {
    "schema": {
      "application/json": {
        "type": "object",
        "properties": {
          "totp": {
            "type": "string",
            "example": "123456"
          },
          "deviceName": {
            "type": "string",
            "example": "asdf123asdf"
          }
        }
      }
    }
  },
  "security": [
    {
      "AccessTokenBearer": []
    },
    {
      "AccessTokenCookie": []
    }
  ],
  "responses": {
    "200": {
      "description": "Verification result and optionally the session with a refreshed MFA claim",
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "OK"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "UNKNOWN_DEVICE_ERROR"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "INVALID_TOTP_ERROR"
                    ]
                  },
                  "currentNumberOfFailedAttempts": {
                    "type": "number",
                    "example": 2
                  },
                  "maxNumberOfFailedAttempts": {
                    "type": "number",
                    "example": 5
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "LIMIT_REACHED_ERROR"
                    ]
                  },
                  "retryAfterMs": {
                    "type": "number",
                    "example": 30000
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "GENERAL_ERROR"
                    ]
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      },
      "headers": {
        "Set-Cookie": {
          "description": "Sent in cookie-based sessions if the access token payload is updated",
          "schema": {
            "type": "string",
            "example": "sAccessToken=eyJhb...%3D%3D; Path=/; Expires=Tue, 22 Jun 2021 07:43:07 GMT; HttpOnly; SameSite=Lax"
          }
        },
        "st-access-token": {
          "description": "Sent in cookie-based sessions if the access token payload is updated",
          "schema": {
            "type": "string",
            "example": "ZTRiOTBjNz...jI5MTZlODkxw"
          }
        },
        "anti-csrf": {
          "description": "Sent if enabled by the user",
          "schema": {
            "type": "string",
            "example": "ZTRiOTBjNz...jI5MTZlODkxw"
          }
        },
        "front-token": {
          "description": "Sent if the access token payload is updated",
          "schema": {
            "type": "string",
            "example": "ZTRiOTBjNz...jI5MTZlODkxw"
          }
        },
        "Access-Control-Expose-Headers": {
          "schema": {
            "type": "string",
            "example": "anti-csrf, front-token, st-access-token"
          }
        }
      }
    },
    "403": {
      "description": "A claim validation error happened during factor setup",
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "invalid claim"
                  },
                  "claimValidationErrors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "st-ev"
                        },
                        "reason": {
                          "type": "object",
                          "example": {
                            "message": "wrong value",
                            "expectedValue": true,
                            "actualValue": false
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "invalid claim"
                  },
                  "claimValidationErrors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "st-mfa"
                        },
                        "reason": {
                          "type": "string",
                          "example": "Completed factors in the session does not satisfy the MFA requirements for auth"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      }
    },
    "404": {
      "description": "error code 404",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Not Found"
            ]
          }
        }
      }
    },
    "500": {
      "description": "error code 500",
      "content": {
        "text/plain": {
          "schema": {
            "type": "string",
            "enum": [
              "Internal Error"
            ]
          }
        }
      }
    }
  }
}